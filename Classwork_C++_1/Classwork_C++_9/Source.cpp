#include <iostream>
using namespace std;

/*
 Циклы for(), while()

"1-Задачи-циклы.pdf"
5. Пользователь с клавиатуры вводит числа.
Посчитать их сумму и вывести на экран, как только
пользователь введет ноль.

6. Написать игру "Угадай число".
Программа загадывает число в диапазоне от 1 до 500.
Пользователь пытается его угадать.
После каждой попытки программа выдает подсказки,
больше или меньше его число загаданного.
В конце программа выдает статистику:
за сколько попыток угадано число, сколько времени
это заняло.
Предусмотреть выход по 0, в случае, если пользователю
надоело угадывать число.
*/
/* 8. Вывести на экран прямоугольник с заданными
сторонами заданным символом.
Input: 3 8 @ <ENTER>

@@@@@@@@
@@@@@@@@
@@@@@@@@
*/
int main()
{
    setlocale(LC_ALL, "Rus");

    int var_a, var_c;
    char b;
    cout << "Введите стороны прямоугольника и символ:";
    cin >> var_a >> var_c >> b;
    // var_a - высота
    // var_c - ширина
    //int j = 1;
    // одинарный цикл для вывода прямоугольника
    for (int i = 0, j = 1; i < var_a * var_c; i++) {
        cout << b;
        if (j < var_c) { j++; }
        else { cout << endl; j = 1; }
    }
    cin.get(); cin.get();
}

#include <iostream>
using namespace std;

/*
 Циклы for(), while()
"1-Задачи-циклы.pdf"

5. Пользователь с клавиатуры вводит числа.
Посчитать их сумму и вывести на экран, как только
пользователь введет ноль.

6. Написать игру "Угадай число".
Программа загадывает число в диапазоне от 1 до 500.
Пользователь пытается его угадать.
После каждой попытки программа выдает подсказки,
больше или меньше его число загаданного.
В конце программа выдает статистику:
за сколько попыток угадано число, сколько времени
это заняло.
Предусмотреть выход по 0, в случае, если
пользователю надоело угадывать число.
*/
/*
5. Пользователь с клавиатуры вводит числа.
Посчитать их сумму и вывести на экран, как только
пользователь введет ноль.
*/
int main()
{
    setlocale(LC_ALL, "Rus");
    int sum = 0; // переменная для суммы
    // 1 вариант
    while (true) { // бесконечный цикл while, while(1)
        int a;
        cout << "-> ";
        cin >> a;
        if (a == 0) { break; } // прекращение работы цикла
        sum += a;
    }
    cout << "Сумма = " << sum << endl;
    // 2 вариант
    sum = 0; // сброс переменной sum для новой суммы
    int a = 1;
    while (a != 0) {
        cout << "-> ";
        cin >> a;
        sum += a;
    }
    cout << "Сумма = " << sum << endl;
    // 3 вариант с помощью цикла do{}while
    sum = 0; // сброс, очистка переменной sum для нового суммирования
    do {
        cout << "-> ";
        cin >> a;
        sum += a;
    } while (a != 0);
    cout << "Сумма = " << sum << endl;

    cin.get(); cin.get();
}

#include <iostream>
#include <time.h> // для ф-ции time()
using namespace std;

/*
 Циклы for(), while()
"1-Задачи-циклы.pdf"

6. Написать игру "Угадай число".
Программа загадывает число в диапазоне от 1 до 500.
Пользователь пытается его угадать.
После каждой попытки программа выдает подсказки,
больше или меньше его число загаданного.
В конце программа выдает статистику:
за сколько попыток угадано число, сколько времени
это заняло.
Предусмотреть выход по 0, в случае, если
пользователю надоело угадывать число.
*/
int main()
{
    setlocale(LC_ALL, "Rus");
    // srand() - иниц-ция генератора псевдослучайных значений
    // time(0) - возвращает текущее время в секундах
    //           прошедших с 01.01.1970
    srand(time(0)); //

    for (int i = 0; i < 10; i++) {
        // rand() - ф-ция генерации псевдослучайных целых чисел
        //  в диапазоне от 0 до 32767
        // получить следующее случ. число
        int a = rand() % 500 + 1; // 0-499 +1==> 1-500
        cout << a << endl;
    }
    cin.get(); cin.get();
}
    
#include <iostream>
#include <iomanip> // набор манипуляторов
#include <time.h> // для ф-ции time()

using namespace std;

/*
 Циклы for(), while()
"1-Задачи-циклы.pdf"

6. Написать игру "Угадай число".
Программа загадывает число в диапазоне от 1 до 500.
Пользователь пытается его угадать.
После каждой попытки программа выдает подсказки,
больше или меньше его число загаданного.
В конце программа выдает статистику:
за сколько попыток угадано число, сколько времени
это заняло.
Предусмотреть выход по 0, в случае, если
пользователю надоело угадывать число.
*/
int main()
{
    setlocale(LC_ALL, "Rus");
    srand(time(0));
    int a = rand() % 500 + 1;
    int Count = 0;
    clock_t TimeStart = clock(); // переменная для времени в милисекундах
    bool GameOver = false;
    // cout << a << endl; // для диагностики, проверка
    while (GameOver == false) {
        cout << "Введите число" << endl;
        int b;
        cin >> b;
        if (b == 0) {
            cout << "Игра окончена! " << endl;
            GameOver = true;
            continue;
            // break;
        }
        Count++;
        if (b > a) {
            cout << "Ваше число больше моего" << endl;
        }
        else if (b < a) {
            cout << "Ваше число меньше моего" << endl;
        }
        else {
            cout << "Вы угадали! " << endl;
            GameOver = true;

        }

    } // while
    cout << "Количество попыток: " << Count << endl;
    clock_t TimeEnd = clock();
    int Duration = TimeEnd - TimeStart; // затраченное время в милисекундах
    int H = (Duration / 1000) / 3600;
    int M = (Duration / 1000) % 3600 / 60;
    int S = (Duration / 1000) % 60;
    int Ms = Duration % 1000;
    cout << setfill('0') << setw(2) << H << ":"
        << setw(2) << M << ":"
        << setw(2) << S << "."
        << setw(3) << Ms << endl;
    cin.get(); cin.get();
}
