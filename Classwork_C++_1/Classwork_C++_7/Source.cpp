#include <iostream>
using namespace std;

/*
Задачи урока "11-12. Оператор множественного выбора"
5. ***Пользователь вводит число.
Определить, положительное это число, отрицательное
или равно нулю.
*/
int main()
{
    setlocale(LC_ALL, "Rus");
    double a; // переменная для рабочего числа
    cout << "Введите любое число: ";
    cin >> a;
    int code; // переменная для кодировки диапазона числа
    // кодирование значения переменной a
    if (a > 0) { code = 1; } //  1 - полож. число
    else if (a < 0) { code = -1; } // -1 - отриц. число
    else { code = 0; } //  0 - нулевое число
    // расшифровка кодировки диапазона числа a
    switch (code)
    {
    case  1: cout << "Число положительное\n"; break;
    case -1: cout << "Число отрицательное\n"; break;
    case  0: cout << "Число нулевое\n"; break;
    }
    cin.get(); cin.get();
}


#include <iostream>
using namespace std;

/*
  Циклы
    for() {}
    while() {}
    do {} while()
  Пример реализации цикла for
*/

int main()
{
    setlocale(LC_ALL, "Rus");

    // for( Блок инициализации; блок условия работы цикла; последействие )
    // {
    //    тело цикла - те действия, которые надо многократно повторить
    //     с помощью этого цикла
    // }
    // 1 вариант - печать строки "Hello World!" 10 раз
    for (int i = 0; i < 10; i++) { // i++ - инкремент (i=i+1), шаг вперед
        cout << i << " - "; // печать i - индексной переменной цикла
        cout << "Hello World!" << endl;
    } // переменная int i = 0; за пределы цикла не выйдет
      // переменная int i = 0; - локальная переменная цикла,
      //  потому что она объявлена внутри цикла

    cout << endl; // просто разделитель

    // 2 вариант - печать строки "Hello World!" 10 раз
    int i; // локальная переменная ф-ции main(), а не переменная цикла for
    for (i = 0; i < 10; /*пустой блок*/) {
        cout << i << ") " << "Hello World\n";
        i++; // делаем шаг перед по индексной переменной i - обязательное действие
    }
    cout << "i = " << i << endl; // здесь переменная i доступна за циклом for

    cout << endl; // просто разделитель

    // 3 вариант
    i = 0; // обнуление переменной i (счетчик цикла) перед началом цикла
           // переменную i не надо повторно объявлять - она уже была объявлена
           //  перед циклом во втором варианте
    for (/*пустой блок*/; i < 10; /*пустой блок*/) {
        //cout << i++ << ") " << "Hello World\n"; // i++ - постфиксный инкремент
        // или так
        cout << ++i << ") " << "Hello World\n"; // ++i - префиксный инкремент
    }
    cout << "i = " << i << endl; // здесь переменная i доступна за циклом for

    cout << endl; // просто разделитель

    // 4 вариант - с помощью бесконечного цикла
    //for(;;) {}- бесконечный цикл, пустой блок условия цикла for - это условие ИСТИНА/true
    //for(;true;) {}- бесконечный цикл
    int j = 0; // индексная переменная j для нижеследующего цикла
    for (; ; ) { // бесконечный цикл
        if (j < 10) { // сравнение - проверка продолжения цикла
            cout << j << ") " << "Hello World!" << endl;
            j++; // шаг вперед j=j+1
        }
        else {
            cout << "Завершение цикла, j = " << j << endl; // диагностика
            break; // оператор break - прекратить цикл, выйти из цикла
        }
    } // конец цикла

    cin.get(); cin.get();
}
    

#include <iostream>
using namespace std;

/*
Задачи по теме Циклы
1. Вывести на экран все числа от нуля до введенного пользователем числа.

2. Написать программу, которая выводит таблицу квадратов первых
десяти целых положительных чисел.
Рекомендуемый вид вывода:
Число Квадрат
1       1
2       4
и т.д.
*/

int main()
{
    setlocale(LC_ALL, "Rus");


    cin.get(); cin.get();
}

#include <iostream>
using namespace std;

/*
Задачи по теме Циклы
2. Написать программу, которая выводит таблицу
квадратов первых
десяти целых положительных чисел.
Рекомендуемый вид вывода:
Число Квадрат
1       1
2       4
и т.д.
*/

int main()
{
    setlocale(LC_ALL, "Rus");
    int N;
    cout << "Введите число: ";
    cin >> N;
    cout << "N\tN в квадрате\n"; // шапка таблицы
    for (int i = 1; i <= N; i++) {
        cout << i << "\t" << i * i << endl;
    }
    cin.get(); cin.get();
}


#include <iostream>
using namespace std;

/*
Задачи по теме Циклы
2. Написать программу, которая выводит таблицу
квадратов первых
десяти целых положительных чисел.
Рекомендуемый вид вывода:
Число Квадрат
1       1
2       4
и т.д.
*/

int main()
{
    setlocale(LC_ALL, "Rus");
    double Start, End, Step; // начало цикла, конец цикла, шаг цикла
    cout << "Введите значения начала, конца цикла"
        " и его шага: ";
    cin >> Start >> End >> Step; // последовательное чтение
                                 // трех переменных
    //if (Step < 0) { Step = -Step; } // изменяем знак числа
    Step = abs(Step); // ф-ция возвращает абсолютное значение числа - всегда положительное
    if (Start > End) {
        // новый цикл - цикл в обратном направлении
        for (double i = Start; i >= End; i -= Step) {
            cout << "i = " << i << endl;
        }
    }
    else {
        // старый цикл
        for (double i = Start; i <= End; i += Step) {
            cout << "i = " << i << endl;
        }
    }
    cin.get(); cin.get();
}


#include <iostream>
using namespace std;

/*
Задачи по теме Циклы
15. Написать программу, которая возводит число в степень.
Учесть отрицательные степени.
*/
int main()
{
    setlocale(LC_ALL, "Rus");
    // решение a в степени b
    double a;
    int b; // степень - целое число!
    cout << "Введите число и степень: ";
    cin >> a >> b; // чтение a и b
    double S = 1; // переменная для возведения в степень
                  // сохранения конечного результата
    // цикл вычисления степени
    // 1 вариант - цикл начинается с 0
    for (int i = 0; i < b; i++) {
        S *= a; // S = S * a;
        // Дамп (dump) шагов цикла
        cout << a << "**" << i + 1 << " = " << S << endl;
    }
    // вывод результата
    cout << a << "**" << b << " = " << S << endl;
    // 2 вариант - цикл начинается с 1
    S = 1; // начальное значение перемнной S
    for (int i = 1; i <= b; i++) {
        S *= a;
    }
    cout << a << "**" << b << " = " << S << endl;
    cin.get(); cin.get();
}
