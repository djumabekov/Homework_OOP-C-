#include <iostream>
using namespace std;

/*
Пример тернарного оператора
a,b => minimum
if(a < b){a}
else{b}
a < b ? a : b;
*/
int main()
{
    setlocale(LC_ALL, "Rus");
    int a, b;
    cout << "Enter 2 number: ";
    cin >> a >> b;
    // if-else
    if (a < b) { cout << "Min = " << a << endl; }
    else { cout << "Min = " << b << endl; }
    // Тернанрный
    // (условие) ? [блок кода для ИСТИНА]:[блок кода для ЛОЖЬ];
    a < b ? cout << "Min = " << a : cout << "Max = " << a;
    cout << endl;
    (a < b) ? (cout << "Min = " << a << endl)
        : (cout << "Min = " << a << endl);

    // наиболее распространенные записи использования
    //  тернарного оператора
    // поиск минимального значения
    cout << "Min = " << (a < b ? a : b) << endl;
    int Min = (a < b) ? a : b; // тернанрный оператор
    if (a < b) { Min = a; } // аналог с помощью if-else
    else { Min = b; }
    //Min = if (a < b) { a; } else { b; } - синтактит. неверная запись

    int Max = (a > b) ? a : b;
    cout << "Max = " << Max << endl;

    cin.get(); cin.get();
}


#include <iostream>
using namespace std;

/*
Пример тернарного оператора
a,b => minimum
if(a < b){a}
else{b}
a < b ? a : b;
*/
int main()
{
    setlocale(LC_ALL, "Rus");
    int a, b, c;
    cout << "Enter 3 number: ";
    cin >> a >> b >> c;
    // поиск минимума из 3-х чисел тернарным оператором
    int Min = (a < b&& a < c) ? a :
        ((b < a&& b < c) ? b : c); // вложенный тернарный оператор
    cout << "Min = " << Min << endl;
    // аналог с помощью if-else
    if (a < b && a < c) { Min = a; }
    else
    { // вложенный if-else
        if (b < a && b < c) { Min = b; }
        else { Min = c; }
    }
    cout << "Min = " << Min << endl;

    cin.get(); cin.get();
}


#include <iostream>
using namespace std;

/*
 Циклы for(), while()

"1-Задачи-циклы.pdf"
3. Пользователь вводит число.
Определить, является ли оно простым.
Число называется простым, если оно делится только
на себя и на единицу.

5. Пользователь с клавиатуры вводит числа.
Посчитать их сумму и вывести на экран, как только
пользователь введет ноль.

6. Написать игру "Угадай число".
Программа загадывает число в диапазоне от 1 до 500.
Пользователь пытается его угадать.
После каждой попытки программа выдает подсказки,
больше или меньше его число загаданного.
В конце программа выдает статистику:
за сколько попыток угадано число, сколько времени
это заняло.
Предусмотреть выход по 0, в случае, если пользователю
надоело угадывать число.

8. Вывести на экран прямоугольник с заданными сторонами
заданным символом.

"2-Лабораторная-5-циклы.pdf"
8. Написать программу, которая генерирует три последовательности
из десяти случайных чисел в диапазоне от 1 до 10,
выводит каждую последовательность на экран и вычисляет
среднее арифметическое каждой последовательности.
*/

int main()
{
    setlocale(LC_ALL, "Rus");
    for (int i = 0; i < 10; i++) {
        // рабочий код цикла
        cout << i << ", "; // 0, 1, 2, 3.....
    }
    cout << endl;
    for (int i = 0; i < 10; cout << i++ << ", "); // тело цикла отсутствует - пустое тело цикла
    cout << endl;
    for (int i = 0; i < 10; cout << i << ", ", i++) {} // пустое тело цикла
    cout << endl;
    // цикл while
    int i = 0; // подготовка к циклу while
    while (i < 10) // (i < 10) - условие работы цикла
    { // тело цикла
        cout << i << ", "; // рабочий код цикла
        i++; // шаг вперед по i, последействие шага цикла
    }
    // записи бесконечных циклов for и while
    for (;;);
    for (; true;);
    while (true); // C++
    while (1);    // C/C++

    cin.get(); cin.get();
}


#include <iostream>
using namespace std;

/*
 Циклы for(), while()

"1-Задачи-циклы.pdf"
3. Пользователь вводит число.
Определить, является ли оно простым.
Число называется простым, если оно делится только
на себя и на единицу.

5. Пользователь с клавиатуры вводит числа.
Посчитать их сумму и вывести на экран, как только
пользователь введет ноль.

6. Написать игру "Угадай число".
Программа загадывает число в диапазоне от 1 до 500.
Пользователь пытается его угадать.
После каждой попытки программа выдает подсказки,
больше или меньше его число загаданного.
В конце программа выдает статистику:
за сколько попыток угадано число, сколько времени
это заняло.
Предусмотреть выход по 0, в случае, если пользователю
надоело угадывать число.

8. Вывести на экран прямоугольник с заданными сторонами
заданным символом.
*/

/*3. Пользователь вводит число.
Определить, является ли оно простым.
Число называется простым, если оно делится только
на себя и на единицу.*/
int main()
{
    setlocale(LC_ALL, "Rus");
    int N;
    cout << "Введите цеоле число: ";
    cin >> N;
    bool isPraim = true; // =true, если число простое
    for (int i = 2; i < N; i++) {
        if (N % i == 0) {
            // число не простое - составное
            isPraim = false; // =false, если число не простое
            break; // завершаем цикл, т.к. дальше проверять
                   // не имеет смысла
        }
    } // for()
    // вывод результата
    if (isPraim == true) {
        cout << "Число " << N << " простое\n";
    }
    else {
        cout << "Число " << N << " не простое\n";
    }
    cin.get(); cin.get();
}


#include <iostream>
using namespace std;

/*
 Циклы for(), while()

"1-Задачи-циклы.pdf"
5. Пользователь с клавиатуры вводит числа.
Посчитать их сумму и вывести на экран, как только
пользователь введет ноль.

6. Написать игру "Угадай число".
Программа загадывает число в диапазоне от 1 до 500.
Пользователь пытается его угадать.
После каждой попытки программа выдает подсказки,
больше или меньше его число загаданного.
В конце программа выдает статистику:
за сколько попыток угадано число, сколько времени
это заняло.
Предусмотреть выход по 0, в случае, если пользователю
надоело угадывать число.
*/
/* 8. Вывести на экран прямоугольник с заданными
сторонами заданным символом.
Input: 3 8 @ <ENTER>

@@@@@@@@
@@@@@@@@
@@@@@@@@
*/
int main()
{
    setlocale(LC_ALL, "Rus");

    int var_a, var_c;
    char b;
    cout << "Введите стороны прямоугольника и символ:";
    cin >> var_a >> var_c >> b;
    for (int i = 0; i < var_a; i++) {
        for (int j = 0; j < var_c; j++) {
            cout << b;
        }
        cout << endl;
    }
    cin.get(); cin.get();
}


#include <iostream>
using namespace std;

/*
 Циклы for(), while()

"1-Задачи-циклы.pdf"
5. Пользователь с клавиатуры вводит числа.
Посчитать их сумму и вывести на экран, как только
пользователь введет ноль.

6. Написать игру "Угадай число".
Программа загадывает число в диапазоне от 1 до 500.
Пользователь пытается его угадать.
После каждой попытки программа выдает подсказки,
больше или меньше его число загаданного.
В конце программа выдает статистику:
за сколько попыток угадано число, сколько времени
это заняло.
Предусмотреть выход по 0, в случае, если пользователю
надоело угадывать число.
*/
/* 8. Вывести на экран прямоугольник с заданными
сторонами заданным символом.
Input: 3 8 @ <ENTER>

@@@@@@@@
@@@@@@@@
@@@@@@@@
*/
int main()
{
    setlocale(LC_ALL, "Rus");

    int var_a, var_c;
    char b;
    cout << "Введите стороны прямоугольника и символ:";
    cin >> var_a >> var_c >> b;
    for (int i = 0; i < var_a; i++) {
        for (int j = 0; j < var_c; j++) {
            if ((j == 0 || j == var_c - 1)
                || (i == 0 || i == var_a - 1)) {
                cout << b;
            }
            else { cout << " "; }
        }
        cout << endl;
    }
    cin.get(); cin.get();
}


#include <iostream>
using namespace std;

/*
 Циклы for(), while()

"1-Задачи-циклы.pdf"
5. Пользователь с клавиатуры вводит числа.
Посчитать их сумму и вывести на экран, как только
пользователь введет ноль.

6. Написать игру "Угадай число".
Программа загадывает число в диапазоне от 1 до 500.
Пользователь пытается его угадать.
После каждой попытки программа выдает подсказки,
больше или меньше его число загаданного.
В конце программа выдает статистику:
за сколько попыток угадано число, сколько времени
это заняло.
Предусмотреть выход по 0, в случае, если пользователю
надоело угадывать число.
*/
/* 8. Вывести на экран прямоугольник с заданными
сторонами заданным символом.
Input: 3 8 @ <ENTER>

@@@@@@@@
@@@@@@@@
@@@@@@@@
*/
int main()
{
    setlocale(LC_ALL, "Rus");

    int var_a, var_c;
    char b;
    cout << "Введите стороны прямоугольника и символ:";
    cin >> var_a >> var_c >> b;
    for (int i = 0; i < var_c; i++) { cout << b; }
    cout << endl;
    for (int j = 0; j < var_a - 2; j++) {
        cout << b;
        for (int y = 0; y < var_c - 2; y++) {
            cout << " ";
        }
        cout << b << endl;
    }
    for (int i = 0; i < var_c; i++) { cout << b; }
    cin.get(); cin.get();
}
